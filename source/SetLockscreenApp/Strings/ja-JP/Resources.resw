<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppBarAddButton" xml:space="preserve">
    <value>登録追加</value>
    <comment>アプリバーの[追加]ボタン</comment>
  </data>
  <data name="AppBarPasteButton" xml:space="preserve">
    <value>貼り付け</value>
    <comment>アプリバーの[貼り付け]ボタン</comment>
  </data>
  <data name="AppBarPastePopupPasteButton" xml:space="preserve">
    <value>登録追加</value>
    <comment>アプリバーの[貼り付け]ボタンの貼り付けポップアップの登録追加ボタン</comment>
  </data>
  <data name="AppBarPinToStartButton" xml:space="preserve">
    <value>スタート画面にピン留めする</value>
    <comment>アプリバーの[セカンダリタイル]ボタン</comment>
  </data>
  <data name="AppBarRemoveButton" xml:space="preserve">
    <value>登録解除</value>
    <comment>アプリバーの[削除]ボタン</comment>
  </data>
  <data name="AppBarSetLockscreenButton" xml:space="preserve">
    <value>ロック画面に設定</value>
    <comment>アプリバーの[ロック画面に設定]ボタン</comment>
  </data>
  <data name="AppBarUnPinFromStartButton" xml:space="preserve">
    <value>スタート画面からピン留めを外す</value>
    <comment>アプリバーの[セカンダリタイル削除]ボタン</comment>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>登録された写真や画像を使って、お使いのコンピューターのロック画面の画像を自動的に切り替えます。</value>
    <comment>アプリの説明</comment>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>ロック画面の自動切り替え</value>
    <comment>アプリの名前</comment>
  </data>
  <data name="ErrorMessageAddFiles" xml:space="preserve">
    <value>{0} 個のファイルを追加できませんでした。</value>
    <comment>登録追加に失敗したときのエラーメッセージ</comment>
  </data>
  <data name="FilePickerOpenCommitButtonText" xml:space="preserve">
    <value>追加</value>
    <comment>ファイルピッカー(登録追加)のCommitボタン</comment>
  </data>
  <data name="HelpPagePopupCloseButtonName" xml:space="preserve">
    <value>閉じる</value>
    <comment>ヘルプのポップアップの閉じるボタン</comment>
  </data>
  <data name="HoursMinutesFormat" xml:space="preserve">
    <value>{0} 時間 {1} 分</value>
    <comment>時間の書式 (1時間以上)</comment>
  </data>
  <data name="MinutesFormat" xml:space="preserve">
    <value>{0} 分</value>
    <comment>時間の書式 (1時間未満)</comment>
  </data>
  <data name="ProgressIsItemChangingCancelButton" xml:space="preserve">
    <value>中断</value>
    <comment>アイテムの追加、削除、並び替えなどを中断するボタン</comment>
  </data>
  <data name="ProgressIsItemChangingText" xml:space="preserve">
    <value>登録内容を更新しています...</value>
    <comment>アイテムの追加、削除、並び替えなどの間に表示するプログレス</comment>
  </data>
  <data name="SettingCharmHelpName" xml:space="preserve">
    <value>アプリの説明</value>
    <comment>設定チャーム-ヘルプの名称</comment>
  </data>
  <data name="SettingCharmOpenStoreName" xml:space="preserve">
    <value>Windows ストアで表示</value>
    <comment>ストアを開くリンク</comment>
  </data>
  <data name="SettingCharmPrivacyPolicyName" xml:space="preserve">
    <value>プライバシーポリシー</value>
    <comment>設定チャーム-プライバシーポリシーの名称</comment>
  </data>
  <data name="SettingCharmUpdateSettingName" xml:space="preserve">
    <value>切り替えの設定</value>
    <comment>設定チャーム-切り替えの名称</comment>
  </data>
  <data name="SharePageAddButton" xml:space="preserve">
    <value>登録追加</value>
    <comment>共有チャームの[追加]ボタン</comment>
  </data>
  <data name="SharePageSetLockscreenButton" xml:space="preserve">
    <value>ロック画面に設定する</value>
    <comment>共有チャームの[ロック画面に設定]ボタン</comment>
  </data>
  <data name="UpdateOnAppLaunchCommandNotSet" xml:space="preserve">
    <value>切り替えない</value>
    <comment>[アプリ起動時のロック画面切り替え]の確認ダイアログの選択肢(not set)</comment>
  </data>
  <data name="UpdateOnAppLaunchCommandSet" xml:space="preserve">
    <value>切り替える</value>
    <comment>[アプリ起動時のロック画面切り替え]の確認ダイアログの選択肢(set)</comment>
  </data>
  <data name="UpdateOnAppLaunchMessage" xml:space="preserve">
    <value>ロック画面を切り替えますか。</value>
    <comment>[アプリ起動時のロック画面切り替え]の確認ダイアログのメッセージ</comment>
  </data>
  <data name="UpdateOnAppLaunchTitle" xml:space="preserve">
    <value>アプリ起動時のロック画面切り替えの確認</value>
    <comment>[アプリ起動時のロック画面切り替え]の確認ダイアログのタイトル</comment>
  </data>
  <data name="UpdateTriggerOnAppLaunchName" xml:space="preserve">
    <value>アプリ起動時に切り替える</value>
    <comment>アプリ起動時にロック画面を変更する設定</comment>
  </data>
  <data name="UpdateTriggerOnAppLaunchShouldAskUserName" xml:space="preserve">
    <value>切り替える前に確認する</value>
    <comment>アプリ起動時にロック画面を変更する設定の変更前に確認するかどうか</comment>
  </data>
  <data name="UpdateTriggerOnMaintenanceFreshnessTimeName" xml:space="preserve">
    <value>間隔</value>
    <comment>一定時間ごとにロック画面を変更する設定の更新間隔</comment>
  </data>
  <data name="UpdateTriggerOnMaintenanceName" xml:space="preserve">
    <value>定期的に切り替える (電源接続時のみ)</value>
    <comment>一定時間ごとにロック画面を変更する設定</comment>
  </data>
  <data name="UpdateTriggerOnNetworkStateChangeName" xml:space="preserve">
    <value>ネットワークの状態が変わった時に切り替える</value>
    <comment>ネットワークの状態が変わった時にロック画面を変更する設定</comment>
  </data>
  <data name="UpdateTriggerSuppressedDurationName" xml:space="preserve">
    <value>切り替え後、次に切り替えるまでの時間</value>
    <comment>切り替えの最小間隔</comment>
  </data>
</root>